#
# To make browse-everything aware of a provider, uncomment the info for that provider and add your API key information.
# The file_system provider can be a path to any directory on the server where your application is running.
#
file_system:
  home: /home/app/webapp/tmp/import
globus:
  home: /home/app/webapp/public/globus
<% if ENV['DROPBOX_APP_KEY'].present? %>
dropbox:
  client_id: <%= ENV['DROPBOX_APP_KEY'] %>
  client_secret: <%= ENV['DROPBOX_APP_SECRET'] %>
  download_directory: tmp/uploads/
<% end %>
<% if ENV['BOX_CLIENT_ID'].present? %>
box:
  client_id: <%= ENV['BOX_CLIENT_ID'] %>
  client_secret: <%= ENV['BOX_CLIENT_SECRET'] %>
<% end %>
<% if ENV['AWS_S3_BUCKET'] %>
s3:
  bucket: <%= ENV['AWS_S3_BUCKET'] %>
  response_type: signed_url # set to :public_url for public urls or :s3_uri for an s3://BUCKET/KEY uri
  expires_in: 14400 # for signed_url response_type, number of seconds url will be valid for.
  app_key: <%= ENV['AWS_ACCESS_KEY_ID'] %>       # :app_key, :app_secret, and :region can be specified
  app_secret: <%= ENV['AWS_SECRET_ACCESS_KEY'] %> # explicitly here, or left out to use system-configured
  region: <%= ENV['AWS_S3_REGION'] %>     # defaults.
  # See https://aws.amazon.com/blogs/security/a-new-and-standardized-way-to-manage-credentials-in-the-aws-sdks/
<% end %>
<% if ENV['GOOGLE_API_CLIENT_ID'].present? %>
google_drive:
  :client_id: <%= ENV['GOOGLE_API_CLIENT_ID'] %>
  :client_secret: <%= ENV['GOOGLE_API_CLIENT_SECRET'] %>
<% end %>
#
