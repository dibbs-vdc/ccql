# Generated by hyrax:models
class Collection < ActiveFedora::Base
  include ::Hyrax::CollectionBehavior

  property :vdc_type, predicate: ::RDF::URI("https://datacollaboratory.org/collection#vdcType"), multiple: false

  property :identifier_system, predicate: ::RDF::URI("https://datacollaboratory.org/collection#identifierSystem"), multiple: false do |index|
    index.as :stored_searchable
  end

  property :vdc_creator, predicate: ::RDF::URI("https://datacollaboratory.org/collection#creator"), multiple: true do |index|
    index.as :stored_searchable, :facetable
  end

  # NOTE: :title already exists as core metadata (default is multiple, which needs to be turned off in the form)
  #       http://samvera.github.io/customize-metadata-model.html#core-metadata
  #       The pre-existing title must exist, but we'll create an additional
  #       :vdc_title mapped to a different predicate in post-processing.

  # To be set from :title in post processing (apply_vdc_metadata)
  property :vdc_title, predicate: ::RDF::URI("https://datacollaboratory.org/collection#title"), multiple: false do |index|
    index.as :stored_searchable, :facetable
  end

  property :abstract, predicate: ::RDF::URI("https://datacollaboratory.org/collection#abstract"), multiple: false do |index|
    index.as :stored_searchable, :facetable
  end

  property :funder, predicate: ::RDF::URI("https://datacollaboratory.org/collection#funder"), multiple: true do |index|
    index.as :stored_searchable, :facetable
  end

  property :collection_size, predicate: ::RDF::URI("https://datacollaboratory.org/collection#size"), multiple: false do |index|
    index.as :stored_searchable, :facetable
  end

  property :note, predicate: ::RDF::URI("https://datacollaboratory.org/collection#note"), multiple: true do |index|
    index.as :stored_searchable, :facetable
  end

  property :creation_date, predicate: ::RDF::URI("https://datacollaboratory.org/collection#creationDate"), multiple: true do |index|
    index.as :stored_searchable, :facetable
  end

  # TODO: I don't know if this is the best way to apply vdc metadata.
  #       For the resource work, I'm using the generated actor for post-processing metadata changes.
  #       However, for collections, there doesn't seem to be something like that (or, perhaps I've missed it).
  #       I need some sort of consistent way of doing this... eventually.
  #       For now, this apply_vdc_metadata is being called after create and update in the collections controller.
  def apply_vdc_metadata
    assign_creation_date
    self.vdc_type = "collection"
    self.vdc_title = self.title[0]
    self.identifier_system = self.id # TODO: Redundant?
  end

  ##
  # @param time_service [#time_in_utc]
  #
  # @return [ActiveTriples::Relation<Date>]
  def assign_creation_date(time_service: Hyrax::TimeService)
    self.creation_date = [time_service.time_in_utc.to_date]
  end

  # The include (include ::Hyrax::BasicMetadata) must appear
  # below custom predicate definitions as of Hyrax 2.0.0
  include ::Hyrax::BasicMetadata

  def vdc_creator(*args)
    value = get_values(:vdc_creator, *args)
    value.sort.map { |v| v.split.last }
  end

  def vdc_creator=(value)
    value = value.map.with_index { |v, i| "#{i} #{v}"}
    set_value(:vdc_creator, value)
  end

  self.indexer = Hyrax::CollectionWithBasicMetadataIndexer
end
