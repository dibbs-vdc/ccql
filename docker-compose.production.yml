# https://docs.docker.com/compose/production/

version: '2.2'
services:
  main:
    image: registry.gitlab.com/notch8/rutgers-vdc:${TAG}
    volumes:
      - 'rails-letsencrypt:/etc/letsencrypt'
      - 'rails-tmp:/home/app/webapp/tmp'
      - 'rails-assets:/home/app/webapp/public/assets'
    env_file:
      - .env
      - .env.production

  web:
    extends: main
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - redis
      - solr
      - fcrepo
      - mysql
      - worker
    restart: unless-stopped

  worker:
    extends: main
    command: bundle exec sidekiq
    depends_on:
      - redis
      - solr
      - fcrepo
      - mysql
    restart: unless-stopped

  redis:
    image: redis:3
    ports:
      - '6379'
    volumes:
      - 'redis:/data'
    restart: unless-stopped

  mysql:
    image: mysql:5.7
    env_file:
      - .env
      - .env.production
    ports:
      - '3306:3306'
    volumes:
      - 'mysql:/var/lib/mysql'
    restart: unless-stopped

  solr:
    image: registry.gitlab.com/notch8/rutgers-vdc/solr:latest
    build:
      context: .
      dockerfile: Dockerfile.solr
    ports:
      - "8983:8983"
    volumes:
      - 'solr:/opt/solr/server/solr/mycores'
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - hyrax
      - /opt/config
    restart: unless-stopped

  fcrepo:
    image: botimer/fcrepo:4.5.1
    volumes:
      - 'fcrepo:/opt/data'
    ports:
      - "8984:8080"
    restart: unless-stopped

volumes:
  fcrepo:
  mysql:
  redis:
  solr:
  rails-tmp:
  rails-assets:
  rails-letsencrypt:
